"0",""
"0","## -----------------------------------------------------------------------------"
"0",""
"0","#' @title honest_did"
"0","#'"
"0","#' @description a function to compute a sensitivity analysis"
"0","#'  using the approach of Rambachan and Roth (2021)"
"0","#' @param es an event study"
"0","honest_did <- function(es, ...) {"
"0","  UseMethod(""honest_did"", es)"
"0","}"
"0",""
"0",""
"0","#' @title honest_did.AGGTEobj"
"0","#'"
"0","#' @description a function to compute a sensitivity analysis"
"0","#'  using the approach of Rambachan and Roth (2021) when"
"0","#'  the event study is estimating using the `did` package"
"0","#'"
"0","#' @param e event time to compute the sensitivity analysis for."
"0","#'  The default value is `e=0` corresponding to the ""on impact"""
"0","#'  effect of participating in the treatment."
"0","#' @param type Options are ""smoothness"" (which conducts a"
"0","#'  sensitivity analysis allowing for violations of linear trends"
"0","#'  in pre-treatment periods) or ""relative_magnitude"" (which"
"0","#'  conducts a sensitivity analysis based on the relative magnitudes"
"0","#'  of deviations from parallel trends in pre-treatment periods)."
"0","#' @inheritParams HonestDiD::createSensitivityResults"
"0","#' @inheritParams HonestDid::createSensitivityResults_relativeMagnitudes"
"0","honest_did.AGGTEobj <- function(es,"
"0","                                e=0,"
"0","                                type=c(""smoothness"", ""relative_magnitude""),"
"0","                                method=NULL,"
"0","                                bound=""deviation from parallel trends"","
"0","                                Mvec=NULL,"
"0","                                Mbarvec=NULL,"
"0","                                monotonicityDirection=NULL,"
"0","                                biasDirection=NULL,"
"0","                                alpha=0.05,"
"0","                                parallel=FALSE,"
"0","                                gridPoints=10^3,"
"0","                                grid.ub=NA,"
"0","                                grid.lb=NA,"
"0","                                ...) {"
"0","  "
"0","  "
"0","  type <- type[1]"
"0","  "
"0","  # make sure that user is passing in an event study"
"0","  if (es$type != ""dynamic"") {"
"0","    stop(""need to pass in an event study"")"
"0","  }"
"0","  "
"0","  # check if used universal base period and warn otherwise"
"0","  if (es$DIDparams$base_period != ""universal"") {"
"0","    warning(""it is recommended to use a universal base period for honest_did"")"
"0","  }"
"0","  "
"0","  # recover influence function for event study estimates"
"0","  es_inf_func <- es$inf.function$dynamic.inf.func.e"
"0","  "
"0","  # recover variance-covariance matrix"
"0","  n <- nrow(es_inf_func)"
"0","  V <- t(es_inf_func) %*% es_inf_func / (n*n) "
"0","  "
"0","  "
"0","  nperiods <- nrow(V)"
"0","  npre <- sum(1*(es$egt < 0))"
"0","  npost <- nperiods - npre"
"0","  "
"0","  baseVec1 <- basisVector(index=(e+1),size=npost)"
"0","  "
"0","  orig_ci <- constructOriginalCS(betahat = es$att.egt,"
"0","                                 sigma = V, numPrePeriods = npre,"
"0","                                 numPostPeriods = npost,"
"0","                                 l_vec = baseVec1)"
"0","  "
"0","  if (type==""relative_magnitude"") {"
"0","    if (is.null(method)) method <- ""C-LF"""
"0","    robust_ci <- createSensitivityResults_relativeMagnitudes(betahat = es$att.egt, sigma = V, "
"0","                                                             numPrePeriods = npre, "
"0","                                                             numPostPeriods = npost,"
"0","                                                             bound=bound,"
"0","                                                             method=method,"
"0","                                                             l_vec = baseVec1,"
"0","                                                             Mbarvec = Mbarvec,"
"0","                                                             monotonicityDirection=monotonicityDirection,"
"0","                                                             biasDirection=biasDirection,"
"0","                                                             alpha=alpha,"
"0","                                                             gridPoints=100,"
"0","                                                             grid.lb=-1,"
"0","                                                             grid.ub=1,"
"0","                                                             parallel=parallel)"
"0","    "
"0","  } else if (type==""smoothness"") {"
"0","    robust_ci <- createSensitivityResults(betahat = es$att.egt,"
"0","                                          sigma = V, "
"0","                                          numPrePeriods = npre, "
"0","                                          numPostPeriods = npost,"
"0","                                          method=method,"
"0","                                          l_vec = baseVec1,"
"0","                                          monotonicityDirection=monotonicityDirection,"
"0","                                          biasDirection=biasDirection,"
"0","                                          alpha=alpha,"
"0","                                          parallel=parallel)"
"0","  }"
"0","  "
"0","  list(robust_ci=robust_ci, orig_ci=orig_ci, type=type)"
"0","}"
"0",""
